{"version":3,"sources":["Card.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","list","react_default","a","createElement","map","_ref2","name","image","salePrice","sku","url","className","href","src","alt","SearchBar","searchChange","type","placeholder","onChange","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","console","log","state","_this2","fetch","then","response","json","data","products","_this3","filteredLenses","filter","newLenses","toLowerCase","includes","src_SearchBar","src_Card_0","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"yNAsBeA,cAlBF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACZ,OACEC,EAAAC,EAAAC,cAAA,WACGH,EAAKI,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,UAAWC,EAA3BJ,EAA2BI,IAAKC,EAAhCL,EAAgCK,IAAhC,OACRT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,6DACfV,EAAAC,EAAAC,cAAA,KAAGS,KAAOF,GAAMT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,KAAKE,IAAKN,EAAOO,IAAI,UACpDb,EAAAC,EAAAC,cAAA,UAAMG,EAAN,KACAL,EAAAC,EAAAC,cAAA,UAAMK,EAAN,KACAP,EAAAC,EAAAC,cAAA,UAAMM,SCCDM,EAVG,SAAAhB,GAAsB,IAAnBiB,EAAmBjB,EAAnBiB,aACnB,OACEf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,SACZC,YAAY,oBACZC,SAAUH,MCmCCI,cApCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAgBRQ,eAAiB,SAACC,GAChBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAC1CC,QAAQC,IAAIN,GACZK,QAAQC,IAAI,IAlBZd,EAAKe,MAAQ,CACXrC,KAAO,GACPgC,YAAa,IAJEV,mFAQE,IAAAgB,EAAAb,KACnBc,MAZQ,+LAaPC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACAL,EAAKP,SAAS,CAAC/B,KAAO2C,EAAKC,8CAW1B,IAAAC,EAAApB,KACDqB,EAAiBrB,KAAKY,MAAMrC,KAAK+C,OAAO,SAAAC,GAC5C,OAAOA,EAAU1C,KAAK2C,cAAcC,SAASL,EAAKR,MAAML,YAAYiB,iBAEtE,OACEhD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgD,EAAD,CAAWnC,aAAcS,KAAKI,iBAC9B5B,EAAAC,EAAAC,cAACiD,EAAD,CAAMpD,KAAM8C,YA/BAO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAAzC,GAAiD,IAA9C8D,EAA8C9D,EAA9C8D,OAAQC,EAAsC/D,EAAtC+D,OAAQC,EAA8BhE,EAA9BgE,OAAQC,EAAsBjE,EAAtBiE,OAAQC,EAAclE,EAAdkE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqE,WAAP,KACEtE,EAAAC,EAAAC,cAACqE,EAAD,QAOJjB","file":"static/js/main.2097f7ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\nimport 'tachyons';\r\n\r\nconst Card = ({ list }) => {\r\n    return (\r\n      <div>\r\n        {list.map(({ name, image, salePrice, sku, url }) => (\r\n          <div className=\"tc f7 lh-title bg-gray dib pa3 ma2 grow bw2 shadow-5 w-10\">\r\n          <a href={ url }><img className=\"h4\" src={image} alt=\"Lens\"></img></a>\r\n          <h2>{ name } </h2>\r\n          <h2>{ salePrice } </h2>\r\n          <h3>{ sku }</h3>\r\n          </div>\r\n        ))}\r\n        \r\n      </div>\r\n    )\r\n    \r\n  }\r\n\r\n\r\nexport default Card;","import React from 'react';\r\n\r\n\r\nconst SearchBar = ( {searchChange} ) => {\r\n  return(\r\n    <div>\r\n    <input type='search' \r\n    placeholder='Search for a lens'\r\n    onChange={searchChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\nimport Card from './Card';\nimport SearchBar from './SearchBar';\n\nconst url = 'https://api.bestbuy.com/v1/products((search=Lens)&manufacturer=sony&name=e-mount*)?apiKey=n6AZysP6mrFp3ljQjiVlvYCQ&sort=name.asc&show=name,image,salePrice,sku,url&pageSize=100&format=json'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list : [],\n      searchfield: ''\n    }\n  }\n// Making sure that API call runs AFTER component renders \n  componentDidMount () {\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n          this.setState({list : data.products})\n      }\n    )\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n    console.log(event)\n    console.log(1+1)\n  }\n\n  render() {\n    const filteredLenses = this.state.list.filter(newLenses => {\n      return newLenses.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    })\n    return (\n      <div>\n      <SearchBar searchChange={this.onSearchChange}/>\n      <Card list={filteredLenses}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}